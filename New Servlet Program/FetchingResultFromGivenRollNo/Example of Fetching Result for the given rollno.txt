Example of Fetching Result for the given rollno

Here, you will learn that how to fetch result for the given rollno. I am assuming that there is a table as given below:

CREATE TABLE  "RESULT" 
   (	"ROLLNO" NUMBER, 
	"NAME" VARCHAR2(40), 
	"RESULT" VARCHAR2(40), 
	"GRADE" VARCHAR2(40), 
	 CONSTRAINT "RESULT_PK" PRIMARY KEY ("ROLLNO") ENABLE
   )
/

We are assuming there are many records in this table. In this example, we are getting the data from the database in servlet and printing it. We are doing all the database logic in servlet for simplicity of the program. But it will be better to separate it from the servlet file.
Example of Fetching Result for the given rollno

In this example, we have create three files

    * index.html
    * Search.java
    * web.xml

index.html

This page gets rollno from the user and forwards this data to servlet which is responsible to show the records based on the given rollno.

<html>
<body>
<form action="servlet/Search">
Enter your Rollno:<input type="text" name="roll"/><br/>

<input type="submit" value="search"/>
</form>
</body>
</html>

Search.java

This is the servlet file which gets the input from the user and maps this data with the database and prints the record for the matched data. In this page, we are displaying the column name of the database along with data, so we are using ResultSetMetaData interface.

import java.io.*;
import java.sql.*;
import javax.servlet.ServletException;
import javax.servlet.http.*;

public class Search extends HttpServlet {

public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

response.setContentType("text/html");
PrintWriter out = response.getWriter();
		
String rollno=request.getParameter("roll");
int roll=Integer.valueOf(rollno);
		
try{
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection(
"jdbc:oracle:thin:@localhost:1521:xe","system","oracle");
			
PreparedStatement ps=con.prepareStatement("select * from result where rollno=?");
ps.setInt(1,roll);
			
out.print("<table width=50% border=1>");
out.print("<caption>Result:</caption>");

ResultSet rs=ps.executeQuery();
			
/* Printing column names */
ResultSetMetaData rsmd=rs.getMetaData();
int total=rsmd.getColumnCount();
out.print("<tr>");
for(int i=1;i<=total;i++)
{
out.print("<th>"+rsmd.getColumnName(i)+"</th>");
}

out.print("</tr>");
			
/* Printing result */

while(rs.next())
{
out.print("<tr><td>"+rs.getInt(1)+"</td><td>"+rs.getString(2)+"
</td><td>"+rs.getString(3)+"</td><td>"+rs.getString(4)+"</td></tr>");
				
}

out.print("</table>");
			
}catch (Exception e2) {e2.printStackTrace();}
		
finally{out.close();}

}
}


web.xml file

This is the configuration file which provides information of the servlet to the container.

<web-app>

<servlet>
<servlet-name>Search</servlet-name>
<servlet-class>Search</servlet-class>
</servlet>

<servlet-mapping>
<servlet-name>Search</servlet-name>
<url-pattern>/servlet/Search</url-pattern>
</servlet-mapping>

</web-app>

